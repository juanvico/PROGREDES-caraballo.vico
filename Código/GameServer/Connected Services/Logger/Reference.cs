//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GameServer.Logger {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Logger.ILogService")]
    public interface ILogService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogService/StartNewGameLog", ReplyAction="http://tempuri.org/ILogService/StartNewGameLogResponse")]
        void StartNewGameLog();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogService/StartNewGameLog", ReplyAction="http://tempuri.org/ILogService/StartNewGameLogResponse")]
        System.Threading.Tasks.Task StartNewGameLogAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogService/AddNewLogEntry", ReplyAction="http://tempuri.org/ILogService/AddNewLogEntryResponse")]
        void AddNewLogEntry(string entry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogService/AddNewLogEntry", ReplyAction="http://tempuri.org/ILogService/AddNewLogEntryResponse")]
        System.Threading.Tasks.Task AddNewLogEntryAsync(string entry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogService/GetGameLog", ReplyAction="http://tempuri.org/ILogService/GetGameLogResponse")]
        string[] GetGameLog();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogService/GetGameLog", ReplyAction="http://tempuri.org/ILogService/GetGameLogResponse")]
        System.Threading.Tasks.Task<string[]> GetGameLogAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogService/AddNewGameResult", ReplyAction="http://tempuri.org/ILogService/AddNewGameResultResponse")]
        void AddNewGameResult(LogServiceInterfaces.PlayerStats[] players);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogService/AddNewGameResult", ReplyAction="http://tempuri.org/ILogService/AddNewGameResultResponse")]
        System.Threading.Tasks.Task AddNewGameResultAsync(LogServiceInterfaces.PlayerStats[] players);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogService/TopTenScores", ReplyAction="http://tempuri.org/ILogService/TopTenScoresResponse")]
        LogServiceInterfaces.PlayerStats[] TopTenScores();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogService/TopTenScores", ReplyAction="http://tempuri.org/ILogService/TopTenScoresResponse")]
        System.Threading.Tasks.Task<LogServiceInterfaces.PlayerStats[]> TopTenScoresAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogService/GetMatchesStats", ReplyAction="http://tempuri.org/ILogService/GetMatchesStatsResponse")]
        LogServiceInterfaces.Match[] GetMatchesStats();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogService/GetMatchesStats", ReplyAction="http://tempuri.org/ILogService/GetMatchesStatsResponse")]
        System.Threading.Tasks.Task<LogServiceInterfaces.Match[]> GetMatchesStatsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILogServiceChannel : GameServer.Logger.ILogService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LogServiceClient : System.ServiceModel.ClientBase<GameServer.Logger.ILogService>, GameServer.Logger.ILogService {
        
        public LogServiceClient() {
        }
        
        public LogServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LogServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LogServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LogServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void StartNewGameLog() {
            base.Channel.StartNewGameLog();
        }
        
        public System.Threading.Tasks.Task StartNewGameLogAsync() {
            return base.Channel.StartNewGameLogAsync();
        }
        
        public void AddNewLogEntry(string entry) {
            base.Channel.AddNewLogEntry(entry);
        }
        
        public System.Threading.Tasks.Task AddNewLogEntryAsync(string entry) {
            return base.Channel.AddNewLogEntryAsync(entry);
        }
        
        public string[] GetGameLog() {
            return base.Channel.GetGameLog();
        }
        
        public System.Threading.Tasks.Task<string[]> GetGameLogAsync() {
            return base.Channel.GetGameLogAsync();
        }
        
        public void AddNewGameResult(LogServiceInterfaces.PlayerStats[] players) {
            base.Channel.AddNewGameResult(players);
        }
        
        public System.Threading.Tasks.Task AddNewGameResultAsync(LogServiceInterfaces.PlayerStats[] players) {
            return base.Channel.AddNewGameResultAsync(players);
        }
        
        public LogServiceInterfaces.PlayerStats[] TopTenScores() {
            return base.Channel.TopTenScores();
        }
        
        public System.Threading.Tasks.Task<LogServiceInterfaces.PlayerStats[]> TopTenScoresAsync() {
            return base.Channel.TopTenScoresAsync();
        }
        
        public LogServiceInterfaces.Match[] GetMatchesStats() {
            return base.Channel.GetMatchesStats();
        }
        
        public System.Threading.Tasks.Task<LogServiceInterfaces.Match[]> GetMatchesStatsAsync() {
            return base.Channel.GetMatchesStatsAsync();
        }
    }
}
